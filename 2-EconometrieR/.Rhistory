help
help()
help
help()
help("all")
help("")
help(??)
help("??")
?
?
help
brochet <- read.delim("C:/Documents/HugoC/MEGASync/Minimal/0-Quick/Downloads/brochet.txt")
View(brochet)
View(brochet)
head(brochet)
reg<-lm(TxDDT~age,data=brochet)
reg<-lm(TxDDT~age,data=brochet)
View(brochet)
summary(reg)
plot(reg)
par(nflow=c(2,2))
par(mfrow=c(2,2))
plot(reg)
ipi <- read.table("C:/Documents/HugoC/MEGASync/Minimal/0-Quick/Downloads/ipi.txt", quote="\"", comment.char="")
View(ipi)
ipi.ts(ipi, frequency=4)
ipi.ts=ts(ipi, frequency=4)
ipi.ts
1.45
mode(1.45)
mode("text")
mode(2>3)
is.numeric(1.45)
is.numeric(1<2)
as.character(1.45)
is.logical("test")
c(1,2,3)
is.vector(c(1,2,3))
matrix(1:12,nrow=4,ncol=3,byrow=TRUE)
matrix(1:12,nrow=4,ncol=3,byrow=FALSE)
is.matrix(matrix(1:12,nrow=4,ncol=3,byrow=FALSE))
array(1:36, c(3,2,3))
data.frame(Taille=c(152,179,163,168,185), Age=c(45,34,23,51,47), Genre=c("F", "M", "F", "F", "M"))
data.frame(Taille=c(152,179,163,168,185), Age=c(45,34,23,51,47), Genre=c("F", "M", "F", "F", "M"), row.names = c("Valérie", "Antoine", "Louise", "Marie", "Georges"))
factor(c("F", "M", "F", "M", "M"))
levels(factor(c("F", "M", "F", "M", "M")))
2 + 3
a<-2+3
4*2->b
a
b
a+b
8-1->b
b
seq(1,25,3)
seq(1,10)
11:20
rep(2,5)
c(8,12,3,2,5)->vec
sum(vec)
mean(vec)
sd(vec)
min(vec)
max(vec)
vec
mat
matrix(1:12,nrow=4,ncol=3,byrow=FALSE)
mat<-matrix(1:12,nrow=3,ncol=4,byrow=FALSE)
df<-data.frame(Taille=c(152,179,163,168,185), Age=c(45,34,23,51,47), Genre=c("F", "M", "F", "F", "M"))
length(vec)
length(mat)
length(df)
summary(vec)
summary(mat)
summary(df)
longvec <- 50:150
longvec
longvec[24]
longvec[24,42]
longvec[c(24,42)]
longvec[24:42]
mat[1,]
mat[,1]
mat[1,1]
mat[2,1]
df
df[3,2]
df$Taille
df[3,$Taille]
df[3,Taille]
df[3,df$Taille]
df[df$Taille]
df[df$Taille,]
df
df[df$Taille>160,]
setwd("C:/Documents/HugoC/Git/Learning/r-rstudio-SelfLearning/2-EconometrieR")
# 2 dimensions : valeur en X (masse corpo) et valeur en Y (taux glucose)
plot(diabetes$BMI, diabetes$Glucose,
main = "Glucose en fonction du BMI",
xlab = "Masse corporelle",
ylab = "Glucose")
library(readr)
diabetes <- read_csv("C:/Documents/HugoC/Git/Learning/r-rstudio-SelfLearning/2-EconometrieR/data/diabetes.csv")
# 2 dimensions : valeur en X (masse corpo) et valeur en Y (taux glucose)
plot(diabetes$BMI, diabetes$Glucose,
main = "Glucose en fonction du BMI",
xlab = "Masse corporelle",
ylab = "Glucose")
library(ggplot2)
ggplot(diabetes, aes(diabetes$BMI, diabetes$Glucose)) +
geom_point() +
ggtitle("Glucose en fonciton de la masse corporelle") +
labs(x="Masse corporelle", y="Glucose")
library(ggthemes)
install.packages(ggthemes)
library(ggthemes)
install.packages(ggthemes)
install.packages("ggthemes")
library(ggthemes)
# Tools > Install packages > "ggthemes"
library(ggthemes)
ggplot(diabetes, aes(diabetes$BMI, diabetes$Glucose)) +
geom_point() +
ggtitle("Glucose en fonction de la masse corporelle") +
theme_wsj() +
labs(x="Masse corporelle", y="Glucose")
ggplot(diabetes, aes(diabetes$BMI, diabetes$Glucose)) +
geom_point() +
ggtitle("Glucose en fonction de la masse corporelle") +
# theme_wsj() +
theme_dark() +
labs(x="Masse corporelle", y="Glucose")
diabetes <- read_csv
install.packages("DataExplorer")
library(DataExplorer)
# 1) Survol des données
summary(diabetes)
# 1) Survol des données
summary(diabetes)
diabetes <- read_csv("C:/Documents/HugoC/Git/Learning/r-rstudio-SelfLearning/2-EconometrieR/data/diabetes.csv")
# 1) Survol des données
summary(diabetes)
plot_density(diabetes)
# 2) Analyse des corrélations
plot_correlation(diabetes)
plot_boxplot(diabetes, by="Outcome")
plot_bar(diabetes)
plot_density(diabetes)
plot_histogram(diabetes)
library(readr)
diabetes <- read_csv("C:/Documents/HugoC/Git/Learning/r-rstudio-SelfLearning/2-EconometrieR/data/diabetes.csv")
# Nouvelle matrice de données
new_diabetes <- diabetes[diabetes$BMI != 0 ,]
library(readr)
diabetes <- read_csv("C:/Documents/HugoC/Git/Learning/r-rstudio-SelfLearning/2-EconometrieR/data/diabetes.csv")
install.packages("DataExplorer")
library(DataExplorer)
# Analyse des corrélations
plot_density(diabetes)
# Nouvelle matrice de données
new_diabetes <- diabetes[diabetes$BMI != 0 ,]
new_diabetes <- na.omit(new_diabetes)
View(new_diabetes)
plot_density(new_diabetes$diabetes.BMI)
plot_density(new_diabetes)
new_diabetes <- diabetes[diabetes$BloodPressure != 0 ,]
plot_density(new_diabetes)
# Analyse des corrélations
plot_correlation(diabetes)
new_diabetes <- data.frame(diabetes$Glucose, diabetes$BMI, diabetes$Pregnancies, diabetes$Age, diabetes$Outcome)
data <- wooldrige::wine
# Importer les données
library(wooldrige)
# Importer les données
library(wooldridge)
data <- wooldridge::wine
# Importer les données
library(wooldridge)
data <- wooldridge::wine
data <- data.frame(data[,4], data[,2])
plot(data$consommation, data$mortalite)
colnames(data) = c("Mortalité", "Consommation")
plot(data$consommation, data$mortalite)
plot(data$consommation, data$mortalite)
plot(data$Consommation, data$Mortalite)
data <- wooldridge::wine
data <- data.frame(data[,4], data[,2])
colnames(data) = c("mortalité", "consommation")
plot(data$consommation, data$mortalite)
modellineaire <- lm(data$mortalite~data$consommation)
View(data)
plot(data$consommation, data$mortalite)
modellineaire <- lm(data$mortalite~data$consommation)
data <- wooldridge::wine
data <- data.frame(data[,4], data[,2])
colnames(data) = c("mortalite", "consommation")
plot(data$consommation, data$mortalite)
modellineaire <- lm(data$mortalite~data$consommation)
summary(modellineaire)
View(modellineaire)
abline(239.147, -19.683)
